#--- Jambalaya, dbnary Project Properties ---
#Tue Jul 12 21:43:14 CEST 2016
DataDisplayBridge\:\:relTypeGroups=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><Groups><Group compositeColor\="-16776961" compositeEnabled\="false" name\="Class-Instance Hierarchy"><Type name\="has instance"/><Type name\="has subclass"/></Group><Group compositeColor\="-16776961" compositeEnabled\="false" name\="Domain&gt;Range"><Type name\="dbnary\:antonym (Domain&gt;Range)"/><Type name\="dbnary\:approximateSynonym (Domain&gt;Range)"/><Type name\="dbnary\:derivesFrom (Domain&gt;Range)"/><Type name\="dbnary\:descendsFrom (Domain&gt;Range)"/><Type name\="dbnary\:etymologicallyDerivesFrom (Domain&gt;Range)"/><Type name\="dbnary\:etymologicallyEquivalentTo (Domain&gt;Range)"/><Type name\="dbnary\:etymologicallyRelatedTo (Domain&gt;Range)"/><Type name\="dbnary\:holonym (Domain&gt;Range)"/><Type name\="dbnary\:hypernym (Domain&gt;Range)"/><Type name\="dbnary\:hyponym (Domain&gt;Range)"/><Type name\="dbnary\:isTranslationOf (Domain&gt;Range)"/><Type name\="dbnary\:meronym (Domain&gt;Range)"/><Type name\="dbnary\:refersTo (Domain&gt;Range)"/><Type name\="dbnary\:synonym (Domain&gt;Range)"/><Type name\="dbnary\:targetLanguage (Domain&gt;Range)"/><Type name\="dbnary\:topNymProperty (Domain&gt;Range)"/><Type name\="dbnary\:troponym (Domain&gt;Range)"/><Type name\="lemon\:abstractForm (Domain&gt;Range)"/><Type name\="lemon\:altRef (Domain&gt;Range)"/><Type name\="lemon\:broader (Domain&gt;Range)"/><Type name\="lemon\:canonicalForm (Domain&gt;Range)"/><Type name\="lemon\:condition (Domain&gt;Range)"/><Type name\="lemon\:constituent (Domain&gt;Range)"/><Type name\="lemon\:context (Domain&gt;Range)"/><Type name\="lemon\:decomposition (Domain&gt;Range)"/><Type name\="lemon\:definition (Domain&gt;Range)"/><Type name\="lemon\:edge (Domain&gt;Range)"/><Type name\="lemon\:element (Domain&gt;Range)"/><Type name\="lemon\:entry (Domain&gt;Range)"/><Type name\="lemon\:equivalent (Domain&gt;Range)"/><Type name\="lemon\:example (Domain&gt;Range)"/><Type name\="lemon\:extrinsicArg (Domain&gt;Range)"/><Type name\="lemon\:formVariant (Domain&gt;Range)"/><Type name\="lemon\:generates (Domain&gt;Range)"/><Type name\="lemon\:hiddenRef (Domain&gt;Range)"/><Type name\="lemon\:incompatible (Domain&gt;Range)"/><Type name\="lemon\:isA (Domain&gt;Range)"/><Type name\="lemon\:isReferenceOf (Domain&gt;Range)"/><Type name\="lemon\:isSenseOf (Domain&gt;Range)"/><Type name\="lemon\:leaf (Domain&gt;Range)"/><Type name\="lemon\:lexicalForm (Domain&gt;Range)"/><Type name\="lemon\:lexicalVariant (Domain&gt;Range)"/><Type name\="lemon\:marker (Domain&gt;Range)"/><Type name\="lemon\:narrower (Domain&gt;Range)"/><Type name\="lemon\:nextTransform (Domain&gt;Range)"/><Type name\="lemon\:objOfProp (Domain&gt;Range)"/><Type name\="lemon\:otherForm (Domain&gt;Range)"/><Type name\="lemon\:pattern (Domain&gt;Range)"/><Type name\="lemon\:phraseRoot (Domain&gt;Range)"/><Type name\="lemon\:prefRef (Domain&gt;Range)"/><Type name\="lemon\:property (Domain&gt;Range)"/><Type name\="lemon\:propertyDomain (Domain&gt;Range)"/><Type name\="lemon\:propertyRange (Domain&gt;Range)"/><Type name\="lemon\:semArg (Domain&gt;Range)"/><Type name\="lemon\:sense (Domain&gt;Range)"/><Type name\="lemon\:senseRelation (Domain&gt;Range)"/><Type name\="lemon\:subjOfProp (Domain&gt;Range)"/><Type name\="lemon\:subsense (Domain&gt;Range)"/><Type name\="lemon\:synArg (Domain&gt;Range)"/><Type name\="lemon\:synBehavior (Domain&gt;Range)"/><Type name\="lemon\:topic (Domain&gt;Range)"/><Type name\="lemon\:transform (Domain&gt;Range)"/></Group></Groups>
Quick\ Search\ Visible=true
