/* CVS $Id: $ */
package org.getalp.dbnary; 
import com.hp.hpl.jena.rdf.model.*;
 
/**
 * Vocabulary definitions from /Users/esterpantaleo/src/etymology/dbnary/trunk/ontology/src/main/resources/org/getalp/dbnary/dbnary.owl 
 * @author Auto-generated by schemagen on 04 Jul 2016 15:37 
 */
public class DBnaryOnt {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://kaiko.getalp.org/dbnary#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    /** <p>An underspecified antonymy relation between LexicalEntities (Lexical entries 
     *  or Lexical Senses). This relation is used to encode an information available 
     *  in a lexicon when the linked Lexical Senses are not known. When both source 
     *  and target of the relation are Lexical Senses, one should use the corresponding 
     *  LEMON relation.</p>
     */
    public static final Property antonym = m_model.createProperty( "http://kaiko.getalp.org/dbnary#antonym" );
    
    /** <p>An underspecified approximate synonymy relation between LexicalEntities (Lexical 
     *  entries or Lexical Senses). This relation is used to encode an information 
     *  available in a lexicon when the linked Lexical Senses are not known. When 
     *  both source and target of the relation are Lexical Senses, one should use 
     *  the corresponding LEMON relation.</p>
     */
    public static final Property approximateSynonym = m_model.createProperty( "http://kaiko.getalp.org/dbnary#approximateSynonym" );
    
    /** <p>The target LexicalEntry is a term derived from the source LexicalEntry. E.g.:eng:link_up 
     *  derivesFrom eng:link_ety_1.</p>
     */
    public static final Property derivesFrom = m_model.createProperty( "http://kaiko.getalp.org/dbnary#derivesFrom" );
    
    /** <p>The target LexicalEntry is a descendant of the source LexicalEntry.</p> */
    public static final Property descendsFrom = m_model.createProperty( "http://kaiko.getalp.org/dbnary#descendsFrom" );
    
    /** <p>The target LexicalEntry etymologically derives from the source LexicalEntry.</p> */
    public static final Property etymologicallyDerivesFrom = m_model.createProperty( "http://kaiko.getalp.org/dbnary#etymologicallyDerivesFrom" );
    
    /** <p>The target and the source LexicalEntries share the same etymological origin.</p> */
    public static final Property etymologicallyEquivalentTo = m_model.createProperty( "http://kaiko.getalp.org/dbnary#etymologicallyEquivalentTo" );
    
    /** <p>An underspecified etymological relationship betwen two LexicalEntries.</p> */
    public static final Property etymologicallyRelatedTo = m_model.createProperty( "http://kaiko.getalp.org/dbnary#etymologicallyRelatedTo" );
    
    public static final Property exampleSource = m_model.createProperty( "http://kaiko.getalp.org/dbnary#exampleSource" );
    
    /** <p>A textual gloss that may be used to disambiguate the translation's source 
     *  sense.</p>
     */
    public static final Property gloss = m_model.createProperty( "http://kaiko.getalp.org/dbnary#gloss" );
    
    /** <p>An underspecified holonymy relation between LexicalEntities (Lexical entries 
     *  or Lexical Senses). This relation is used to encode an information available 
     *  in a lexicon when the linked Lexical Senses are not known. When both source 
     *  and target of the relation are Lexical Senses, one should use the corresponding 
     *  LEMON relation.</p>
     */
    public static final Property holonym = m_model.createProperty( "http://kaiko.getalp.org/dbnary#holonym" );
    
    /** <p>An underspecified hypernymy relation between LexicalEntities (Lexical entries 
     *  or Lexical Senses). This relation is used to encode an information available 
     *  in a lexicon when the linked Lexical Senses are not known. When both source 
     *  and target of the relation are Lexical Senses, one should use the corresponding 
     *  LEMON relation.</p>
     */
    public static final Property hypernym = m_model.createProperty( "http://kaiko.getalp.org/dbnary#hypernym" );
    
    /** <p>An underspecified hyponymy relation between LexicalEntities (Lexical entries 
     *  or Lexical Senses). This relation is used to encode an information available 
     *  in a lexicon when the linked Lexical Senses are not known. When both source 
     *  and target of the relation are Lexical Senses, one should use the corresponding 
     *  LEMON relation.</p>
     */
    public static final Property hyponym = m_model.createProperty( "http://kaiko.getalp.org/dbnary#hyponym" );
    
    /** <p>links the translation information to the Lexical Entity it belongs to.</p> */
    public static final Property isTranslationOf = m_model.createProperty( "http://kaiko.getalp.org/dbnary#isTranslationOf" );
    
    /** <p>An underspecified meronymy relation between LexicalEntities (Lexical entries 
     *  or Lexical Senses). This relation is used to encode an information available 
     *  in a lexicon when the linked Lexical Senses are not known. When both source 
     *  and target of the relation are Lexical Senses, one should use the corresponding 
     *  LEMON relation.</p>
     */
    public static final Property meronym = m_model.createProperty( "http://kaiko.getalp.org/dbnary#meronym" );
    
    /** <p>Textual note that may be used to add information to a LemonElement when no 
     *  standard vocabularies exists to explicit it.</p>
     */
    public static final Property note = m_model.createProperty( "http://kaiko.getalp.org/dbnary#note" );
    
    /** <p>The original part of speech as it was defined in the Wiktionary page. This 
     *  property takes a String litteral as object.</p>
     */
    public static final Property partOfSpeech = m_model.createProperty( "http://kaiko.getalp.org/dbnary#partOfSpeech" );
    
    /** <p>links a vocable to any lexical entry that share the same written form.</p> */
    public static final Property refersTo = m_model.createProperty( "http://kaiko.getalp.org/dbnary#refersTo" );
    
    /** <p>The number of the lexical Sense in the Lexical Entry, as given by Wiktionary. 
     *  This property takes a String literal as an object.</p>
     */
    public static final Property senseNumber = m_model.createProperty( "http://kaiko.getalp.org/dbnary#senseNumber" );
    
    /** <p>An underspecified synonymy relation between LexicalEntities (Lexical entries 
     *  or Lexical Senses). This relation is used to encode an information available 
     *  in a lexicon when the linked Lexical Senses are not known. When both source 
     *  and target of the relation are Lexical Senses, one should use the corresponding 
     *  LEMON relation.</p>
     */
    public static final Property synonym = m_model.createProperty( "http://kaiko.getalp.org/dbnary#synonym" );
    
    /** <p>The target language of a given translation, defined as a Linguistic System.</p> */
    public static final Property targetLanguage = m_model.createProperty( "http://kaiko.getalp.org/dbnary#targetLanguage" );
    
    /** <p>The target language of a given translation. This may be used when the dbnary:targetLanguage 
     *  object property can not be used.</p>
     */
    public static final Property targetLanguageCode = m_model.createProperty( "http://kaiko.getalp.org/dbnary#targetLanguageCode" );
    
    /** <p>An underspecified lexico semantic relation between LexicalEntities (Lexical 
     *  entry OR Lexical Sense). This relation is used to encode an information available 
     *  in a lexicon when the linked Lexical Senses are not known. When both source 
     *  and target of the relation are Lexical Senses, one should use the corresponding 
     *  LEMON relation.</p>
     */
    public static final Property topNymProperty = m_model.createProperty( "http://kaiko.getalp.org/dbnary#topNymProperty" );
    
    /** <p>A verb that indicates more precisely the manner of doing something by replacing 
     *  a verb of a more generalized meaning. E.g.: "Stroll" is a troponym of "walk", 
     *  since it involves a slow and relaxed sort of walking.</p>
     */
    public static final Property troponym = m_model.createProperty( "http://kaiko.getalp.org/dbnary#troponym" );
    
    /** <p>Usage note that is used to further annotate the target of the translation.</p> */
    public static final Property usage = m_model.createProperty( "http://kaiko.getalp.org/dbnary#usage" );
    
    /** <p>The written form of a translation equivalent.</p> */
    public static final Property writtenForm = m_model.createProperty( "http://kaiko.getalp.org/dbnary#writtenForm" );
    
    /** <p>An EtymologyEntry corresponds to a set of Lexical Entries that share the same 
     *  etymology but that do not necessarily share the same Part Of Speech. E.g. 
     *  eng:link_n_1 and eng:link_v_1 are distinct lexical entries and the etymology 
     *  entry link_ety_1 refers to both of them because link_n_1 and link_v_1 share 
     *  the same etymology from Old English ang:linke.</p>
     */
    public static final Resource EtymologyEntry = m_model.createResource( "http://kaiko.getalp.org/dbnary#EtymologyEntry" );
    
    public static final Resource LexicalEntity = m_model.createResource( "http://kaiko.getalp.org/dbnary#LexicalEntity" );
    
    /** <p>Describe translation information for a Lexical Entry or a Lexical Sense.</p> */
    public static final Resource Translation = m_model.createResource( "http://kaiko.getalp.org/dbnary#Translation" );
    
    /** <p>A Vocable corresponds to a set of Lexical Entries that usually share the same 
     *  written form but that do not necessarily share the same Part Of Speech. E.g. 
     *  cat_n and cat_v are distinct lexical entries while the vocable "cat" refers 
     *  to both of them.</p>
     */
    public static final Resource Vocable = m_model.createResource( "http://kaiko.getalp.org/dbnary#Vocable" );
    
}
